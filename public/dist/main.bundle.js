(()=>{const t=document.querySelector(".tasks"),e=document.querySelector(".loading-text"),s=document.querySelector(".task-form"),a=document.querySelector(".task-input"),i=document.querySelector(".form-alert"),n=async()=>{e.style.visibility="visible";try{const{data:{data:{tasks:s}}}=await axios.get("/api/v1/tasks");if(s.length<1)return t.innerHTML='<h5 class="empty-list">No tasks in your list</h5>',void(e.style.visibility="hidden");const a=s.map((t=>{const{completed:e,_id:s,name:a}=t;return`<div class="single-task ${e&&"task-completed"}">\n<h5><span><i class="far fa-check-circle"></i></span>${a}</h5>\n<div class="task-links">\n\n\n\n\x3c!-- edit link --\x3e\n<a href="task.html?id=${s}"  class="edit-link">\n<i class="fas fa-edit"></i>\n</a>\n\x3c!-- delete btn --\x3e\n<button type="button" class="delete-btn" data-id="${s}">\n<i class="fas fa-trash"></i>\n</button>\n</div>\n</div>`})).join("");t.innerHTML=a}catch(e){t.innerHTML='<h5 class="empty-list">There was an error, please try later....</h5>'}e.style.visibility="hidden"};n(),t.addEventListener("click",(async t=>{const s=t.target;if(s.parentElement.classList.contains("delete-btn")){e.style.visibility="visible";const t=s.parentElement.dataset.id;try{await axios.delete(`/api/v1/tasks/${t}`),n()}catch(t){console.log(t)}}e.style.visibility="hidden"})),s.addEventListener("submit",(async t=>{t.preventDefault();const e=a.value;try{await axios.post("/api/v1/tasks",{name:e}),n(),a.value="",i.style.display="block",i.textContent="success, task added",i.classList.add("text-success")}catch(t){i.style.display="block",i.innerHTML="error, please try again"}setTimeout((()=>{i.style.display="none",i.classList.remove("text-success")}),3e3)}))})();